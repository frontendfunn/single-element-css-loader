// trignometric functions

$pi: 3.14159265359;
$_precision: 10;

@function pow($base, $exp) {
  $value: $base;
  @if $exp > 1 {
    @for $i from 2 through $exp {
      $value: $value * $base;
    }
  }
  @if $exp < 1 {
    @for $i from 0 through -$exp {
      $value: $value / $base;
    }
  }
  @return $value;
}

@function fact($num) {
  $fact: 1;
  @if $num > 0 {
    @for $i from 1 through $num {
      $fact: $fact * $i;
    }
  }
  @return $fact;
}

@function _to_unitless_rad($angle) {
  @if unit($angle) == "deg" {
    $angle: $angle / 180deg * $pi;
  }
  @if unit($angle) == "rad" {
    $angle: $angle / 1rad;
  }
  @return $angle;
}

@function sin($angle) {
  $a: _to_unitless_rad($angle);
  $sin: $a;
  @for $n from 1 through $_precision {
    $sin: $sin + (pow(-1, $n) / fact(2 * $n + 1)) * pow($a, (2 * $n + 1));
  }
  @return $sin;
}

@function cos($angle) {
  $a: _to_unitless_rad($angle);
  $cos: 1;
  @for $n from 1 through $_precision {
    $cos: $cos + (pow(-1, $n) / fact(2 * $n)) * pow($a, 2 * $n);
  }
  @return $cos;
}

@function tan($angle) {
  @return sin($angle) / cos($angle);
}
// trignometric functions

html,
body {
  height: 100%;
}
body {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #212121;
}

:root {
  --size: 0.5rem;
}

// sass function
@function createLoader($color, $distance, $shadowCount) {
  $shadow: "0px 0px 0px transparent";
  $angle: 360deg / $shadowCount; // 360 / 12
  @for $i from 1 through $shadowCount {
    $x: $distance * cos($angle * $i); //rcosA
    $y: $distance * sin($angle * $i); //rsinA
    $shadow: "#{$shadow},#{$x} #{$y} #{rgba($color,$i / $shadowCount)}";
  }
  @return unquote($shadow);
}

.loader {
  height: var(--size);
  width: var(--size);
  border-radius: 1rem;
  box-shadow: createLoader(#ffffff, 1.5rem, 12);
  animation: animation 1.5s linear infinite;
  @keyframes animation {
    to {
      transform: rotate(360deg);
    }
  }
}
